steps:
  # Install dependencies and run tests
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['ci']
  
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['test', '--', '--coverage', '--watchAll=false']
  
  # Build the application
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['run', 'build']
  
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'gcr.io/$PROJECT_ID/react-app:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/react-app:latest',
      '.'
    ]
  
  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/react-app:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/react-app:latest']
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'react-app'
    - '--image'
    - 'gcr.io/$PROJECT_ID/react-app:$COMMIT_SHA'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--port'
    - '8080'
    - '--memory'
    - '512Mi'
    - '--cpu'
    - '1'
    - '--max-instances'
    - '10'
    - '--set-env-vars'
    - 'NODE_ENV=production'

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/react-app:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/react-app:latest'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  
# Build timeout
timeout: '1200s'
